apiVersion: v1
kind: Namespace
metadata:
  labels:
    istio-injection: enabled
    name: influxdb
  name: influxdb
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: influxdb2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: influxdb2
    app.kubernetes.io/version: 2.3.0
    helm.sh/chart: influxdb2-2.1.1
  name: influxdb2
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: influxdb2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: influxdb2
    app.kubernetes.io/version: 2.3.0
    helm.sh/chart: influxdb2-2.1.1
  name: influxdb2
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 8086
  selector:
    app.kubernetes.io/instance: influxdb2
    app.kubernetes.io/name: influxdb2
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  annotations:
    helm.sh/resource-policy: keep
  labels:
    app.kubernetes.io/instance: influxdb2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: influxdb2
    app.kubernetes.io/version: 2.3.0
    helm.sh/chart: influxdb2-2.1.1
  name: influxdb2
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 32Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: influxdb2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: influxdb2
    app.kubernetes.io/version: 2.3.0
    helm.sh/chart: influxdb2-2.1.1
  name: influxdb2
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: influxdb2
      app.kubernetes.io/name: influxdb2
  serviceName: influxdb2
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: influxdb2
        app.kubernetes.io/name: influxdb2
    spec:
      containers:
      - env:
        - name: DOCKER_INFLUXDB_INIT_MODE
          value: setup
        - name: DOCKER_INFLUXDB_INIT_USERNAME
          value: admin
        - name: DOCKER_INFLUXDB_INIT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: admin-password
              name: influxdb-auth
        - name: DOCKER_INFLUXDB_INIT_ORG
          value: influxdata
        - name: DOCKER_INFLUXDB_INIT_BUCKET
          value: default
        - name: DOCKER_INFLUXDB_INIT_RETENTION
          value: 0s
        - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
          valueFrom:
            secretKeyRef:
              key: admin-token
              name: influxdb-auth
        - name: INFLUXD_BOLT_PATH
          value: /var/lib/influxdb2/influxd.bolt
        - name: INFLUXD_ENGINE_PATH
          value: /var/lib/influxdb2
        image: influxdb:2.3.0-alpine
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 1
        name: influxdb2
        ports:
        - containerPort: 8086
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 1000m
            memory: 1024Mi
          requests:
            cpu: 250m
            memory: 512Mi
        volumeMounts:
        - mountPath: /var/lib/influxdb2
          name: data
          subPath: null
      serviceAccountName: influxdb2
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: influxdb2
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels:
    app.kubernetes.io/instance: influxdb2
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: influxdb2
    app.kubernetes.io/version: 2.3.0
    helm.sh/chart: influxdb2-2.1.1
  name: influxdb2
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: influxdb2
      app.kubernetes.io/name: influxdb2
